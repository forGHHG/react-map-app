[{"C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\index.js":"1","C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\App.js":"2","C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\components\\kakao\\SearchKakaoMap.js":"3","C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\components\\kakao\\KakaoMap.js":"4","C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\components\\naver\\TypeNaverMap.js":"5","C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\components\\naver\\SearchNaverMap.js":"6","C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\components\\LinkToMap.js":"7","C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\components\\leaflet\\SearchLefletMap.js":"8","C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\components\\leaflet\\LeafletMap.js":"9"},{"size":197,"mtime":1680156053591,"results":"10","hashOfConfig":"11"},{"size":940,"mtime":1680570009720,"results":"12","hashOfConfig":"11"},{"size":1666,"mtime":1680568637660,"results":"13","hashOfConfig":"11"},{"size":9139,"mtime":1680671595001,"results":"14","hashOfConfig":"11"},{"size":2395,"mtime":1680739839264,"results":"15","hashOfConfig":"11"},{"size":4886,"mtime":1680677735312,"results":"16","hashOfConfig":"11"},{"size":559,"mtime":1680570270304,"results":"17","hashOfConfig":"11"},{"size":1504,"mtime":1680657062198,"results":"18","hashOfConfig":"11"},{"size":1520,"mtime":1680657020390,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"1j9oknv",{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"23"},"C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\index.js",[],[],[],"C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\App.js",[],[],"C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\components\\kakao\\SearchKakaoMap.js",[],[],"C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\components\\kakao\\KakaoMap.js",[],[],"C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\components\\naver\\TypeNaverMap.js",[],[],"C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\components\\naver\\SearchNaverMap.js",["50","51"],[],"import React, { useEffect, useState } from \"react\";\r\n\r\nimport '../css/naverMap.css';\r\nimport LinkToMap from \"../LinkToMap\";\r\n\r\nconst LOCATION = {\r\n    lat : 36.360998580215515, \r\n    lng : 127.3817344945746\r\n};\r\n\r\nconst {naver} = window;\r\n\r\nconst SearchNaverMap = () => {\r\n    const [inputVal, setInputVal] = useState('');\r\n    const [lat, setLat] = useState(LOCATION.lat);\r\n    const [lng, setLng] = useState(LOCATION.lng);\r\n\r\n    const infoWindow = new naver.maps.InfoWindow({anchorSkew : true});\r\n    const defaultLocation = new naver.maps.LatLng(lat, lng);\r\n\r\n\r\n    useEffect(() => {\r\n        const mapDiv = document.getElementById(\"myMap\");\r\n        const map = new naver.maps.Map(mapDiv, {\r\n            center : new naver.maps.LatLng(lat, lng),\r\n            zoom : 15\r\n        });\r\n\r\n        var marker = new naver.maps.Marker({\r\n            position: new naver.maps.LatLng(lat, lng),\r\n            map: map\r\n        });\r\n\r\n        infoWindow.setContent([\r\n            '<div style=\"padding:10px;min-width:100px;line-height:5px;\">',\r\n            '<h4 style=\"margin-top:5px;\">정부청사입니다</h4><br />',\r\n            '</div>'\r\n        ].join('\\n'));\r\n\r\n        naver.maps.Event.addListener(marker, \"click\", function(e) {\r\n            if (infoWindow.getMap()) {\r\n                infoWindow.close();\r\n            } else {\r\n                infoWindow.open(map, marker);\r\n            }\r\n        });\r\n\r\n        infoWindow.open(map, marker);\r\n\r\n    }, []);\r\n\r\n    const searchAddressToCoordinate = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputVal === '') {\r\n            return alert('입력해주세요!');\r\n        }\r\n\r\n        infoWindow.close();\r\n\r\n        naver.maps.Service.geocode({query : inputVal}, function (status, response) {\r\n            if (status === naver.maps.Service.Status.ERROR) {\r\n                return alert('검색 결과 중 오류가 발생했습니다.');\r\n            }\r\n            if (response.v2.meta.totalCount === 0) {\r\n                return alert('검색 결과가 존재하지 않습니다.');\r\n            }\r\n\r\n            const htmlAddresses = [],\r\n                item = response.v2.addresses[0],\r\n                point = new naver.maps.Point(item.x, item.y);\r\n\r\n            if (item.roadAddress) {\r\n                htmlAddresses.push('[도로명 주소] ' + item.roadAddress);\r\n            }\r\n    \r\n            if (item.jibunAddress) {\r\n                htmlAddresses.push('[지번 주소] ' + item.jibunAddress);\r\n            }\r\n    \r\n            if (item.englishAddress) {\r\n                htmlAddresses.push('[영문명 주소] ' + item.englishAddress);\r\n            }\r\n\r\n            infoWindow.setContent([\r\n                '<div style=\"padding:10px;min-width:200px;line-height:150%;\">',\r\n                '<h4 style=\"margin-top:5px;\">검색 주소 : '+ inputVal +'</h4><br />',\r\n                htmlAddresses.join('<br />'),\r\n                '</div>'\r\n            ].join('\\n'));\r\n\r\n            let x = parseFloat(item.x); // 경도\r\n            let y = parseFloat(item.y); // 위도\r\n\r\n            setLat(y);\r\n            setLng(x);\r\n            setInputVal('');\r\n            \r\n            const mapDiv = document.getElementById(\"myMap\");\r\n            const map = new naver.maps.Map(mapDiv, {\r\n                center : new naver.maps.LatLng(lat, lng),\r\n                zoom : 15\r\n            });\r\n\r\n            var marker = new naver.maps.Marker({\r\n                position: new naver.maps.LatLng(lat, lng),\r\n                map: map\r\n            });\r\n\r\n            map.setCenter(point);\r\n            infoWindow.open(map, marker);\r\n        });\r\n    }\r\n  \r\n    return (\r\n        <div>\r\n            <LinkToMap />\r\n            <h1>네이버 지도 검색</h1>\r\n\r\n            {/* <MapDiv style={{position: 'relative', width:'1000px', height:'500px'}}> */}\r\n                \r\n\r\n                <div id=\"myMap\"\r\n                    style={{position: 'relative', width:'1000px', height:'500px' }}\r\n                >\r\n                    <div className=\"option\"\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: 0,\r\n                        left: 0,\r\n                        zIndex: 1000,\r\n                        padding: 5,\r\n                    }}\r\n                    >\r\n                        <form onSubmit={searchAddressToCoordinate}>\r\n                            <input type=\"text\" \r\n                                placeholder=\"도로명 주소를 입력하세요.\" \r\n                                value={inputVal}\r\n                                onChange={(e) => setInputVal(e.target.value)}\r\n                            />\r\n                            <button type=\"submit\">검색</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            {/* </MapDiv> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchNaverMap;","C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\components\\LinkToMap.js",[],[],"C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\components\\leaflet\\SearchLefletMap.js",[],[],"C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\src\\components\\leaflet\\LeafletMap.js",["52"],[],"import React, { useEffect } from \"react\";\r\nimport { MapContainer, Marker, Popup, TileLayer, Tooltip, useMap } from 'react-leaflet'\r\n\r\nimport \"leaflet/dist/leaflet.css\"; // 설정안하면 조각조각 나옴\r\nimport { icon } from \"leaflet\";\r\n\r\n\r\nconst Icon = icon({\r\n    iconUrl: \"/images/marker-icon.png\"\r\n  });\r\n\r\n\r\nconst LeafletMap = ({place}) => {\r\n\r\n    // 지도 이동\r\n    const RecenterAutomatically = ({lat,lng}) => {\r\n        const map = useMap();\r\n         useEffect(() => {\r\n           map.setView([lat, lng]);\r\n         }, [lat, lng]);\r\n         return null;\r\n       };\r\n\r\n    return (\r\n        <div style={{position: 'relative', width:'1000px', height:'500px'}}>\r\n            <MapContainer center={[place.lat, place.lng]} zoom={15} scrollWheelZoom={true} style={{ width: \"1000px\", height: \"500px\" }} >\r\n                <TileLayer\r\n                attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                />\r\n                <Marker position={[place.lat, place.lng]} icon={Icon} url={\"/images/marker-icon.png\"}>\r\n                    <Popup>\r\n                        여기는 {place.title}입니다.\r\n                    </Popup>\r\n                    <Tooltip>{place.title}</Tooltip>\r\n                </Marker>\r\n                <RecenterAutomatically lat={place.lat} lng={place.lng} />\r\n            </MapContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LeafletMap;",{"ruleId":"53","severity":1,"message":"54","line":19,"column":11,"nodeType":"55","messageId":"56","endLine":19,"endColumn":26},{"ruleId":"57","severity":1,"message":"58","line":50,"column":8,"nodeType":"59","endLine":50,"endColumn":10,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":20,"column":13,"nodeType":"59","endLine":20,"endColumn":23,"suggestions":"62"},"no-unused-vars","'defaultLocation' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'infoWindow', 'lat', and 'lng'. Either include them or remove the dependency array.","ArrayExpression",["63"],"React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.",["64"],{"desc":"65","fix":"66"},{"desc":"67","fix":"68"},"Update the dependencies array to be: [infoWindow, lat, lng]",{"range":"69","text":"70"},"Update the dependencies array to be: [lat, lng, map]",{"range":"71","text":"72"},[1442,1444],"[infoWindow, lat, lng]",[507,517],"[lat, lng, map]"]