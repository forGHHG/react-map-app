{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhcho1\\\\Desktop\\\\react-Project\\\\kakaomap-app\\\\src\\\\components\\\\naver\\\\SearchNaverMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchNaverMap = () => {\n  _s();\n  const {\n    naver\n  } = window;\n  const [address, setAddress] = useState('');\n  useEffect(() => {\n    const location = new naver.maps.LatLng(36.32787631122742, 127.42585033518178);\n    const options = {\n      center: location,\n      zoom: 16,\n      zoomControl: true,\n      zommControlOptions: {\n        position: naver.maps.Position.TOP_RIGHT\n      }\n    };\n    const map = new naver.maps.Map('naverMap', options);\n    new naver.maps.Marker({\n      position: location,\n      map: map\n    });\n    function btnSetting() {\n      var listEl = document.getElementById('btnList'),\n        btnItem = \"<input id='NORMAL' type='button' value='일반지도' />\" + \"<input id='TERRAIN' type='button' value='지형도' />\" + \"<input id='SATELLITE' type='button' value='위성지도' />\" + \"<input id='HYBRID' type='button' value='겹쳐보기' />\";\n      listEl.innerHTML = btnItem;\n      var el = document.getElementsByClassName('buttons > input');\n      el.onclick = () => {\n        var mapTypeId = this.id;\n        if (map.getMapTypeId() !== naver.maps.MapTypeId[mapTypeId]) {\n          map.setMapTypeId(naver.maps.MapTypeId[mapTypeId]); // 지도 유형 변경하기\n\n          // btns.removeClass(\"control-on\");\n          // $(this).addClass(\"control-on\");\n        }\n      };\n    }\n\n    const btnClick = e => {\n      e.preventDefault();\n      var mapTypeId = this.id;\n      if (map.getMapTypeId() !== naver.maps.MapTypeId[mapTypeId]) {\n        map.setMapTypeId(naver.maps.MapTypeId[mapTypeId]); // 지도 유형 변경하기\n\n        // btns.removeClass(\"control-on\");\n        // $(this).addClass(\"control-on\");\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"btnList\",\n      className: \"buttons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"naverMap\",\n      style: {\n        width: '1000px',\n        height: '500px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchNaverMap, \"BL/QCs5/kMqjJqJ2fF15pwEGKyE=\");\n_c = SearchNaverMap;\nexport default SearchNaverMap;\nvar _c;\n$RefreshReg$(_c, \"SearchNaverMap\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","SearchNaverMap","_s","naver","window","address","setAddress","location","maps","LatLng","options","center","zoom","zoomControl","zommControlOptions","position","Position","TOP_RIGHT","map","Map","Marker","btnSetting","listEl","document","getElementById","btnItem","innerHTML","el","getElementsByClassName","onclick","mapTypeId","id","getMapTypeId","MapTypeId","setMapTypeId","btnClick","e","preventDefault","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/mhcho1/Desktop/react-Project/kakaomap-app/src/components/naver/SearchNaverMap.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\n\r\n\r\nconst SearchNaverMap = () => {\r\n    const {naver} = window;\r\n    const [address, setAddress] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        const location = new naver.maps.LatLng(36.32787631122742, 127.42585033518178);\r\n\r\n        const options = {\r\n            center : location,\r\n            zoom : 16,\r\n            zoomControl : true,\r\n            zommControlOptions: {position : naver.maps.Position.TOP_RIGHT}\r\n        };\r\n        const map = new naver.maps.Map('naverMap', options);\r\n\r\n        new naver.maps.Marker({\r\n            position: location,\r\n            map: map\r\n        });\r\n\r\n        function btnSetting() {\r\n            var listEl = document.getElementById('btnList'),\r\n            btnItem = \"<input id='NORMAL' type='button' value='일반지도' />\"\r\n                    + \"<input id='TERRAIN' type='button' value='지형도' />\"\r\n                    + \"<input id='SATELLITE' type='button' value='위성지도' />\"\r\n                    + \"<input id='HYBRID' type='button' value='겹쳐보기' />\";\r\n                    \r\n            listEl.innerHTML = btnItem;\r\n\r\n            var el = document.getElementsByClassName('buttons > input');\r\n            el.onclick = () => {\r\n                var mapTypeId = this.id;\r\n        \r\n                if (map.getMapTypeId() !== naver.maps.MapTypeId[mapTypeId]) {\r\n                    map.setMapTypeId(naver.maps.MapTypeId[mapTypeId]); // 지도 유형 변경하기\r\n            \r\n                    // btns.removeClass(\"control-on\");\r\n                    // $(this).addClass(\"control-on\");\r\n                }\r\n            }\r\n        }\r\n\r\n        const btnClick = (e) => {\r\n            e.preventDefault();\r\n    \r\n            var mapTypeId = this.id;\r\n        \r\n            if (map.getMapTypeId() !== naver.maps.MapTypeId[mapTypeId]) {\r\n                map.setMapTypeId(naver.maps.MapTypeId[mapTypeId]); // 지도 유형 변경하기\r\n        \r\n                // btns.removeClass(\"control-on\");\r\n                // $(this).addClass(\"control-on\");\r\n            }\r\n        };\r\n\r\n    }, []);\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            {<div id=\"btnList\" className=\"buttons\"></div>}\r\n            <div id=\"naverMap\" style={{width:'1000px', height:'500px'}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchNaverMap;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAInD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM;IAACC;EAAK,CAAC,GAAGC,MAAM;EACtB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IAEZ,MAAMU,QAAQ,GAAG,IAAIJ,KAAK,CAACK,IAAI,CAACC,MAAM,CAAC,iBAAiB,EAAE,kBAAkB,CAAC;IAE7E,MAAMC,OAAO,GAAG;MACZC,MAAM,EAAGJ,QAAQ;MACjBK,IAAI,EAAG,EAAE;MACTC,WAAW,EAAG,IAAI;MAClBC,kBAAkB,EAAE;QAACC,QAAQ,EAAGZ,KAAK,CAACK,IAAI,CAACQ,QAAQ,CAACC;MAAS;IACjE,CAAC;IACD,MAAMC,GAAG,GAAG,IAAIf,KAAK,CAACK,IAAI,CAACW,GAAG,CAAC,UAAU,EAAET,OAAO,CAAC;IAEnD,IAAIP,KAAK,CAACK,IAAI,CAACY,MAAM,CAAC;MAClBL,QAAQ,EAAER,QAAQ;MAClBW,GAAG,EAAEA;IACT,CAAC,CAAC;IAEF,SAASG,UAAUA,CAAA,EAAG;MAClB,IAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;QAC/CC,OAAO,GAAG,kDAAkD,GAClD,kDAAkD,GAClD,qDAAqD,GACrD,kDAAkD;MAE5DH,MAAM,CAACI,SAAS,GAAGD,OAAO;MAE1B,IAAIE,EAAE,GAAGJ,QAAQ,CAACK,sBAAsB,CAAC,iBAAiB,CAAC;MAC3DD,EAAE,CAACE,OAAO,GAAG,MAAM;QACf,IAAIC,SAAS,GAAG,IAAI,CAACC,EAAE;QAEvB,IAAIb,GAAG,CAACc,YAAY,EAAE,KAAK7B,KAAK,CAACK,IAAI,CAACyB,SAAS,CAACH,SAAS,CAAC,EAAE;UACxDZ,GAAG,CAACgB,YAAY,CAAC/B,KAAK,CAACK,IAAI,CAACyB,SAAS,CAACH,SAAS,CAAC,CAAC,CAAC,CAAC;;UAEnD;UACA;QACJ;MACJ,CAAC;IACL;;IAEA,MAAMK,QAAQ,GAAIC,CAAC,IAAK;MACpBA,CAAC,CAACC,cAAc,EAAE;MAElB,IAAIP,SAAS,GAAG,IAAI,CAACC,EAAE;MAEvB,IAAIb,GAAG,CAACc,YAAY,EAAE,KAAK7B,KAAK,CAACK,IAAI,CAACyB,SAAS,CAACH,SAAS,CAAC,EAAE;QACxDZ,GAAG,CAACgB,YAAY,CAAC/B,KAAK,CAACK,IAAI,CAACyB,SAAS,CAACH,SAAS,CAAC,CAAC,CAAC,CAAC;;QAEnD;QACA;MACJ;IACJ,CAAC;EAEL,CAAC,EAAE,EAAE,CAAC;EAKN,oBACI9B,OAAA;IAAAsC,QAAA,gBACKtC,OAAA;MAAK+B,EAAE,EAAC,SAAS;MAACQ,SAAS,EAAC;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO,eAC7C3C,OAAA;MAAK+B,EAAE,EAAC,UAAU;MAACa,KAAK,EAAE;QAACC,KAAK,EAAC,QAAQ;QAAEC,MAAM,EAAC;MAAO;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAO;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChE;AAEd,CAAC;AAAAzC,EAAA,CAnEKD,cAAc;AAAA8C,EAAA,GAAd9C,cAAc;AAqEpB,eAAeA,cAAc;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}