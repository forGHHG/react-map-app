{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhcho1\\\\Desktop\\\\react-Project\\\\kakaomap-app\\\\src\\\\components\\\\naver\\\\SearchNaverMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Container as MapDiv, NaverMap, Marker, useNavermaps } from \"react-naver-maps\";\nimport '../css/naverMap.css';\nimport LinkToMap from \"../LinkToMap\";\nimport MyNaverMap from \"./NaverMap\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCATION = {\n  lat: 36.360998580215515,\n  lng: 127.3817344945746\n};\nconst {\n  naver\n} = window;\nconst SearchNaverMap = () => {\n  _s();\n  const [inputVal, setInputVal] = useState('');\n  const [lat, setLat] = useState(LOCATION.lat);\n  const [lng, setLng] = useState(LOCATION.lng);\n  const infoWindow = new naver.maps.InfoWindow({\n    anchorSkew: true\n  });\n  const navermaps = useNavermaps();\n  const searchAddressToCoordinate = e => {\n    e.preventDefault();\n    if (inputVal === '') {\n      return alert('입력해주새요!');\n    }\n    infoWindow.close();\n    navermaps.Service.geocode({\n      query: inputVal\n    }, function (status, response) {\n      if (status === navermaps.Service.Status.ERROR) {\n        return alert('검색 결과 중 오류가 발생했습니다.');\n      }\n      if (response.v2.meta.totalCount === 0) {\n        return alert('검색 결과가 존재하지 않습니다.');\n      }\n      const htmlAddresses = [],\n        item = response.v2.addresses[0],\n        point = new naver.maps.LatLng(item.x, item.y);\n      if (item.roadAddress) {\n        htmlAddresses.push('[도로명 주소] ' + item.roadAddress);\n      }\n      if (item.jibunAddress) {\n        htmlAddresses.push('[지번 주소] ' + item.jibunAddress);\n      }\n      if (item.englishAddress) {\n        htmlAddresses.push('[영문명 주소] ' + item.englishAddress);\n      }\n      infoWindow.setContent(['<div style=\"padding:10px;min-width:200px;line-height:150%;\">', '<h4 style=\"margin-top:5px;\">검색 주소 : ' + inputVal + '</h4><br />', htmlAddresses.join('<br />'), '</div>'].join('\\n'));\n      let x = parseFloat(item.x); // 경도\n      let y = parseFloat(item.y); // 위도\n\n      setLat(y);\n      setLng(x);\n      // setZoom(15);\n\n      navermaps.setCenter(point);\n      infoWindow.open(navermaps, point);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(LinkToMap, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uB124\\uC774\\uBC84 \\uC9C0\\uB3C4 \\uAC80\\uC0C9\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MapDiv, {\n      style: {\n        position: 'relative',\n        width: '1000px',\n        height: '500px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"option\",\n        style: {\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          zIndex: 1000,\n          padding: 5\n        },\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: searchAddressToCoordinate,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"\\uB3C4\\uB85C\\uBA85 \\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n            value: inputVal,\n            onChange: e => setInputVal(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"\\uAC80\\uC0C9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(NaverMap, {\n        style: {\n          width: '100%',\n          height: '100%'\n        },\n        defaultCenter: {\n          lat,\n          lng\n        },\n        defaultZoom: 15,\n        children: /*#__PURE__*/_jsxDEV(Marker, {\n          position: {\n            lat,\n            lng\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 9\n  }, this);\n};\n_s(SearchNaverMap, \"R+vHeu7A9p6dnzNnz+gAf2oPLMY=\", false, function () {\n  return [useNavermaps];\n});\n_c = SearchNaverMap;\nexport default SearchNaverMap;\nvar _c;\n$RefreshReg$(_c, \"SearchNaverMap\");","map":{"version":3,"names":["React","useState","Container","MapDiv","NaverMap","Marker","useNavermaps","LinkToMap","MyNaverMap","jsxDEV","_jsxDEV","LOCATION","lat","lng","naver","window","SearchNaverMap","_s","inputVal","setInputVal","setLat","setLng","infoWindow","maps","InfoWindow","anchorSkew","navermaps","searchAddressToCoordinate","e","preventDefault","alert","close","Service","geocode","query","status","response","Status","ERROR","v2","meta","totalCount","htmlAddresses","item","addresses","point","LatLng","x","y","roadAddress","push","jibunAddress","englishAddress","setContent","join","parseFloat","setCenter","open","children","fileName","_jsxFileName","lineNumber","columnNumber","style","position","width","height","className","top","left","zIndex","padding","onSubmit","type","placeholder","value","onChange","target","defaultCenter","defaultZoom","_c","$RefreshReg$"],"sources":["C:/Users/mhcho1/Desktop/react-Project/kakaomap-app/src/components/naver/SearchNaverMap.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container as MapDiv, NaverMap, Marker, useNavermaps } from \"react-naver-maps\";\r\n\r\nimport '../css/naverMap.css';\r\nimport LinkToMap from \"../LinkToMap\";\r\nimport MyNaverMap from \"./NaverMap\";\r\n\r\nconst LOCATION = {\r\n    lat : 36.360998580215515, \r\n    lng : 127.3817344945746\r\n};\r\n\r\nconst {naver} = window;\r\n\r\nconst SearchNaverMap = () => {\r\n    const [inputVal, setInputVal] = useState('');\r\n    const [lat, setLat] = useState(LOCATION.lat);\r\n    const [lng, setLng] = useState(LOCATION.lng);\r\n\r\n\r\n    const infoWindow = new naver.maps.InfoWindow({anchorSkew : true});\r\n    const navermaps = useNavermaps();\r\n\r\n    const searchAddressToCoordinate = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputVal === '') {\r\n            return alert('입력해주새요!');\r\n        }\r\n\r\n        infoWindow.close();\r\n\r\n        navermaps.Service.geocode({query : inputVal}, function (status, response) {\r\n            if (status === navermaps.Service.Status.ERROR) {\r\n                return alert('검색 결과 중 오류가 발생했습니다.');\r\n            }\r\n            if (response.v2.meta.totalCount === 0) {\r\n                return alert('검색 결과가 존재하지 않습니다.');\r\n            }\r\n\r\n            const htmlAddresses = [],\r\n                item = response.v2.addresses[0],\r\n                point = new naver.maps.LatLng(item.x, item.y);\r\n\r\n            if (item.roadAddress) {\r\n                htmlAddresses.push('[도로명 주소] ' + item.roadAddress);\r\n            }\r\n    \r\n            if (item.jibunAddress) {\r\n                htmlAddresses.push('[지번 주소] ' + item.jibunAddress);\r\n            }\r\n    \r\n            if (item.englishAddress) {\r\n                htmlAddresses.push('[영문명 주소] ' + item.englishAddress);\r\n            }\r\n\r\n            infoWindow.setContent([\r\n                '<div style=\"padding:10px;min-width:200px;line-height:150%;\">',\r\n                '<h4 style=\"margin-top:5px;\">검색 주소 : '+ inputVal +'</h4><br />',\r\n                htmlAddresses.join('<br />'),\r\n                '</div>'\r\n            ].join('\\n'));\r\n\r\n            let x = parseFloat(item.x); // 경도\r\n            let y = parseFloat(item.y); // 위도\r\n\r\n            setLat(y);\r\n            setLng(x);\r\n            // setZoom(15);\r\n\r\n            navermaps.setCenter(point);\r\n            infoWindow.open(navermaps, point);\r\n        });\r\n    }\r\n  \r\n    return (\r\n        <div>\r\n            <LinkToMap />\r\n            <h1>네이버 지도 검색</h1>\r\n\r\n            <MapDiv style={{position: 'relative', width:'1000px', height:'500px'}}>\r\n                <div className=\"option\"\r\n                style={{\r\n                    position: 'absolute',\r\n                    top: 0,\r\n                    left: 0,\r\n                    zIndex: 1000,\r\n                    padding: 5,\r\n                }}\r\n                >\r\n                    <form onSubmit={searchAddressToCoordinate}>\r\n                        <input type=\"text\" \r\n                            placeholder=\"도로명 주소를 입력하세요.\" \r\n                            value={inputVal}\r\n                            onChange={(e) => setInputVal(e.target.value)}\r\n                        />\r\n                        <button type=\"submit\">검색</button>\r\n                    </form>\r\n                </div>\r\n                {/* <MyNaverMap\r\n                    lat={lat}\r\n                    lng={lng}\r\n                    zoom={15}\r\n                /> */}\r\n                <NaverMap\r\n                    style={{ width: '100%', height: '100%' }}\r\n                    defaultCenter={{ lat, lng }}\r\n                    defaultZoom={15}\r\n                >\r\n                    <Marker position={{ lat, lng }} />\r\n                </NaverMap>\r\n            </MapDiv>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchNaverMap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}