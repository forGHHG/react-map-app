{"ast":null,"code":"import { loadNavermapsScript } from \"./chunk-XOWKJF45.mjs\";\nimport { useClientOptions } from \"./chunk-4CM6CARW.mjs\";\n\n// src/use-navermaps.ts\nimport { suspend } from \"suspend-react\";\nasync function load(options) {\n  var _a;\n  if (typeof window !== \"undefined\" && ((_a = window.naver) == null ? void 0 : _a.maps)) {\n    return window.naver.maps;\n  }\n  if (!options) {\n    throw new Error(\"react-naver-maps: set options with `useNavermaps.config`\");\n  }\n  return await loadNavermapsScript(options);\n}\nfunction useNavermaps() {\n  var _a;\n  if (typeof window === \"undefined\") {\n    throw new Error(\"react-naver-maps: browser\");\n  }\n  if ((_a = window.naver) == null ? void 0 : _a.maps) {\n    return window.naver.maps;\n  }\n  const options = useClientOptions();\n  return suspend(load, [options, \"react-naver-maps/loadClient\"]);\n}\nexport { useNavermaps };","map":{"version":3,"names":["suspend","load","options","_a","window","naver","maps","Error","loadNavermapsScript","useNavermaps","useClientOptions"],"sources":["C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\node_modules\\react-naver-maps\\src\\use-navermaps.ts"],"sourcesContent":["import { suspend } from 'suspend-react';\n\nimport { useClientOptions } from './contexts/client-options';\nimport { loadNavermapsScript } from './load-navermaps-script';\nimport type { ClientOptions } from './types/client';\n\nasync function load(options?: ClientOptions): Promise<typeof naver.maps> {\n  if (typeof window !== 'undefined' && window.naver?.maps) {\n    return window.naver.maps;\n  }\n\n  if (!options) {\n    throw new Error('react-naver-maps: set options with `useNavermaps.config`');\n  }\n\n  return await loadNavermapsScript(options);\n}\n\nexport function useNavermaps() {\n  if (typeof window === 'undefined') {\n    throw new Error('react-naver-maps: browser');\n  }\n\n  /**\n   * TODO: Provider option 이 변경될 경우 클리어하는 로직 필요\n   * ex) submodule 에 파노라마 추가시 window.naver.maps가 존재하므로 새로 로드하지 않음\n   */\n  if (window.naver?.maps) {\n    return window.naver.maps;\n  }\n\n  const options = useClientOptions();\n\n  return suspend(load, [options, 'react-naver-maps/loadClient']);\n}\n\n// useNavermaps.preload = (options: any) => {\n//   if (!window) {\n//     return;\n//   }\n\n//   return preload(load, [options, 'react-naver-maps/loadClient']);\n// };\n\n// useNavermaps.clear = (options: any) => {\n//   return clear([options, 'react-naver-maps/loadClient']);\n// };\n"],"mappings":";;;;AAAA,SAASA,OAAA,QAAe;AAMxB,eAAeC,KAAKC,OAAA,EAAqD;EANzE,IAAAC,EAAA;EAOE,IAAI,OAAOC,MAAA,KAAW,iBAAeD,EAAA,GAAAC,MAAA,CAAOC,KAAA,KAAP,gBAAAF,EAAA,CAAcG,IAAA,GAAM;IACvD,OAAOF,MAAA,CAAOC,KAAA,CAAMC,IAAA;EACtB;EAEA,IAAI,CAACJ,OAAA,EAAS;IACZ,MAAM,IAAIK,KAAA,CAAM,0DAA0D;EAC5E;EAEA,OAAO,MAAMC,mBAAA,CAAoBN,OAAO;AAC1C;AAEO,SAASO,aAAA,EAAe;EAlB/B,IAAAN,EAAA;EAmBE,IAAI,OAAOC,MAAA,KAAW,aAAa;IACjC,MAAM,IAAIG,KAAA,CAAM,2BAA2B;EAC7C;EAMA,KAAIJ,EAAA,GAAAC,MAAA,CAAOC,KAAA,KAAP,gBAAAF,EAAA,CAAcG,IAAA,EAAM;IACtB,OAAOF,MAAA,CAAOC,KAAA,CAAMC,IAAA;EACtB;EAEA,MAAMJ,OAAA,GAAUQ,gBAAA,EAAiB;EAEjC,OAAOV,OAAA,CAAQC,IAAA,EAAM,CAACC,OAAA,EAAS,6BAA6B,CAAC;AAC/D"},"metadata":{},"sourceType":"module","externalDependencies":[]}