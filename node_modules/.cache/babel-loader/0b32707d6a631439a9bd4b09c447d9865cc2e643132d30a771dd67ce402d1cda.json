{"ast":null,"code":"import { omitUndefined } from \"./chunk-RVDAKL7Q.mjs\";\nimport { useNavermaps } from \"./chunk-TWFVD6WD.mjs\";\nimport { HandleEvents } from \"./chunk-533MYCRP.mjs\";\nimport { Overlay } from \"./chunk-IV7GZJYG.mjs\";\n\n// src/overlays/circle.tsx\nimport pick from \"lodash.pick\";\nimport { forwardRef, useEffect, useImperativeHandle, useState } from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar primitiveKvoKeys = [\"radius\", \"strokeWeight\", \"strokeOpacity\", \"strokeColor\", \"strokeStyle\", \"strokeLineCap\", \"strokeLineJoin\", \"fillColor\", \"fillOpacity\", \"clickable\", \"visible\", \"zIndex\"];\nvar kvoKeys = [...primitiveKvoKeys, \"center\"];\nvar kvoEvents = kvoKeys.map(key => `${key}_changed`);\nvar uiEvents = [\"mousedown\", \"mouseup\", \"click\", \"dblclick\", \"rightclick\", \"mouseover\", \"mouseout\", \"mousemove\"];\nvar events = [...uiEvents, ...kvoEvents];\nvar Circle = forwardRef(function Circle2(props, ref) {\n  const {\n    center\n  } = props;\n  const navermaps = useNavermaps();\n  const [circle] = useState(() => new navermaps.Circle(omitUndefined(pick(props, [...kvoKeys]))));\n  useImperativeHandle(ref, () => circle);\n  useEffect(() => {\n    if (center && !circle.getCenter().equals(center)) {\n      circle.setCenter(center);\n    }\n  }, [center]);\n  useEffect(() => {\n    circle.setOptions(omitUndefined(pick(props, primitiveKvoKeys)));\n  }, primitiveKvoKeys.map(key => props[key]));\n  return /* @__PURE__ */jsx(Overlay, {\n    element: circle,\n    children: /* @__PURE__ */jsx(HandleEvents, {\n      events,\n      listeners: props\n    })\n  });\n});\nexport { Circle };","map":{"version":3,"names":["pick","forwardRef","useEffect","useImperativeHandle","useState","jsx","primitiveKvoKeys","kvoKeys","kvoEvents","map","key","uiEvents","events","Circle","Circle2","props","ref","center","navermaps","useNavermaps","circle","omitUndefined","getCenter","equals","setCenter","setOptions","Overlay","element","children","HandleEvents","listeners"],"sources":["C:\\Users\\mhcho1\\Desktop\\react-Project\\kakaomap-app\\node_modules\\react-naver-maps\\src\\overlays\\circle.tsx"],"sourcesContent":["import pick from 'lodash.pick';\nimport { forwardRef, useEffect, useImperativeHandle, useState } from 'react';\n\nimport { HandleEvents } from '../helpers/event';\nimport { Overlay } from '../overlay';\nimport type { UIEventHandlers } from '../types/event';\nimport { useNavermaps } from '../use-navermaps';\nimport { omitUndefined } from '../utils/omit-undefined';\n\nconst primitiveKvoKeys = [\n  'radius',\n  'strokeWeight',\n  'strokeOpacity',\n  'strokeColor',\n  'strokeStyle',\n  'strokeLineCap',\n  'strokeLineJoin',\n  'fillColor',\n  'fillOpacity',\n  'clickable',\n  'visible',\n  'zIndex',\n] as const;\nconst kvoKeys = [\n  ...primitiveKvoKeys,\n  'center',\n] as const;\nconst kvoEvents = kvoKeys.map(key => `${key}_changed`);\nconst uiEvents = [\n  'mousedown',\n  'mouseup',\n  'click',\n  'dblclick',\n  'rightclick',\n  'mouseover',\n  'mouseout',\n  'mousemove',\n] as const;\nconst events = [...uiEvents, ...kvoEvents];\n\ntype CircleOptions = {\n  /**\n   * center\n   * @type naver.maps.Coord | naver.maps.CoordLiteral\n   */\n  center: naver.maps.Coord | naver.maps.CoordLiteral;\n  radius?: number;\n  strokeWeight?: number;\n  strokeOpacity?: number;\n  strokeColor?: string;\n  strokeStyle?: naver.maps.strokeStyleType;\n  strokeLineCap?: naver.maps.strokeLineCapType;\n  strokeLineJoin?: naver.maps.strokeLineJoinType;\n  fillColor?: string;\n  fillOpacity?: number;\n  clickable?: boolean;\n  visible?: boolean;\n  zIndex?: number;\n};\n\nexport type Props = CircleOptions & {\n  onCenterChanged?: (value: naver.maps.Coord) => void;\n  onRadiusChanged?: (value: number) => void;\n  onStrokeWeightChanged?: (value: number) => void;\n  onStrokeOpacityChanged?: (value: number) => void;\n  onStrokeColorChanged?: (value: string) => void;\n  onStrokeStyleChanged?: (value: naver.maps.strokeStyleType) => void;\n  onStrokeLineCapChanged?: (value: naver.maps.strokeLineCapType) => void;\n  onStrokeLineJoinChanged?: (value: naver.maps.strokeLineJoinType) => void;\n  onFillColorChanged?: (value: string) => void;\n  onFillOpacityChanged?: (value: number) => void;\n  onClickableChanged?: (event: boolean) => void;\n  onVisibleChanged?: (event: boolean) => void;\n  onZIndexChanged?: (event: number) => void;\n} & UIEventHandlers<typeof uiEvents>;\n\nexport const Circle = forwardRef<naver.maps.Circle, Props>(function Circle(props, ref) {\n  const { center } = props;\n  const navermaps = useNavermaps();\n  const [circle] = useState(() => new navermaps.Circle(omitUndefined(pick(props, [...kvoKeys])) as CircleOptions));\n\n  useImperativeHandle<naver.maps.Circle | undefined, naver.maps.Circle | undefined>(ref, () => circle);\n\n  useEffect(() => {\n    if (center && !circle.getCenter().equals(center as naver.maps.Point)) {\n      circle.setCenter(center);\n    }\n  }, [center]);\n\n  useEffect(() => {\n    circle.setOptions(omitUndefined(pick(props, primitiveKvoKeys)) as CircleOptions);\n  }, primitiveKvoKeys.map(key => props[key]));\n\n  return (\n    <Overlay element={circle}>\n      <HandleEvents events={events} listeners={props as any} />\n    </Overlay>\n  );\n});\n"],"mappings":";;;;;;AAAA,OAAOA,IAAA,MAAU;AACjB,SAASC,UAAA,EAAYC,SAAA,EAAWC,mBAAA,EAAqBC,QAAA,QAAgB;AA8F/D,SAAAC,GAAA;AAtFN,IAAMC,gBAAA,GAAmB,CACvB,UACA,gBACA,iBACA,eACA,eACA,iBACA,kBACA,aACA,eACA,aACA,WACA,SACF;AACA,IAAMC,OAAA,GAAU,CACd,GAAGD,gBAAA,EACH,SACF;AACA,IAAME,SAAA,GAAYD,OAAA,CAAQE,GAAA,CAAIC,GAAA,IAAO,GAAGA,GAAA,UAAa;AACrD,IAAMC,QAAA,GAAW,CACf,aACA,WACA,SACA,YACA,cACA,aACA,YACA,YACF;AACA,IAAMC,MAAA,GAAS,CAAC,GAAGD,QAAA,EAAU,GAAGH,SAAS;AAsClC,IAAMK,MAAA,GAASZ,UAAA,CAAqC,SAASa,QAAOC,KAAA,EAAOC,GAAA,EAAK;EACrF,MAAM;IAAEC;EAAO,IAAIF,KAAA;EACnB,MAAMG,SAAA,GAAYC,YAAA,EAAa;EAC/B,MAAM,CAACC,MAAM,IAAIhB,QAAA,CAAS,MAAM,IAAIc,SAAA,CAAUL,MAAA,CAAOQ,aAAA,CAAcrB,IAAA,CAAKe,KAAA,EAAO,CAAC,GAAGR,OAAO,CAAC,CAAC,CAAkB,CAAC;EAE/GJ,mBAAA,CAAkFa,GAAA,EAAK,MAAMI,MAAM;EAEnGlB,SAAA,CAAU,MAAM;IACd,IAAIe,MAAA,IAAU,CAACG,MAAA,CAAOE,SAAA,EAAU,CAAEC,MAAA,CAAON,MAA0B,GAAG;MACpEG,MAAA,CAAOI,SAAA,CAAUP,MAAM;IACzB;EACF,GAAG,CAACA,MAAM,CAAC;EAEXf,SAAA,CAAU,MAAM;IACdkB,MAAA,CAAOK,UAAA,CAAWJ,aAAA,CAAcrB,IAAA,CAAKe,KAAA,EAAOT,gBAAgB,CAAC,CAAkB;EACjF,GAAGA,gBAAA,CAAiBG,GAAA,CAAIC,GAAA,IAAOK,KAAA,CAAML,GAAA,CAAI,CAAC;EAE1C,OACE,eAAAL,GAAA,CAACqB,OAAA;IAAQC,OAAA,EAASP,MAAA;IAChBQ,QAAA,iBAAAvB,GAAA,CAACwB,YAAA;MAAajB,MAAA;MAAgBkB,SAAA,EAAWf;IAAA,CAAc;EAAA,CACzD;AAEJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}