{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhcho1\\\\Desktop\\\\react-Project\\\\kakaomap-app\\\\src\\\\components\\\\naver\\\\TypeNaverMap.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Container as MapDiv, NaverMap, Marker, useNavermaps } from \"react-naver-maps\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LOCATION = {\n  x: 127.42585033518178,\n  y: 36.32787631122742\n};\nconst TypeNaverMap = () => {\n  _s();\n  // const {naver} = window;\n\n  const navermaps = useNavermaps();\n  const [mapTypeId, setMapTypeId] = useState(navermaps.MapTypeId.NORMAL);\n  const buttons = [{\n    typeId: navermaps.MapTypeId.NORMAL,\n    text: '일반지도'\n  }, {\n    typeId: navermaps.MapTypeId.TERRAIN,\n    text: '지형도'\n  }, {\n    typeId: navermaps.MapTypeId.SATELLITE,\n    text: '위성지도'\n  }, {\n    typeId: navermaps.MapTypeId.HYBRID,\n    text: '겹쳐보기'\n  }];\n  const Buttons = _ref => {\n    let {\n      typeId,\n      text\n    } = _ref;\n    return /*#__PURE__*/_jsxDEV(\"button\", {\n      style: {\n        border: 'solid 1px #333',\n        outline: '0 none',\n        borderRadius: '5px',\n        boxShadow: '2px 2px 1px 1px rgba(0, 0, 0, 0.5)',\n        margin: '0 5px 5px 0',\n        backgroundColor: typeId === mapTypeId ? '#2780E3' : 'white',\n        color: typeId === mapTypeId ? 'white' : 'black'\n      },\n      onClick: () => {\n        setMapTypeId(typeId);\n      },\n      children: text\n    }, typeId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(MapDiv, {\n    style: {\n      position: 'relative',\n      width: '1000px',\n      height: '500px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        zIndex: 1000,\n        padding: 5\n      },\n      children: buttons.map(btn => {\n        /*#__PURE__*/_jsxDEV(Buttons, {\n          typeId: btn.typeId,\n          text: btn.text\n        }, btn.typeId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this);\n        // return (\n        //   <button\n        //     key={btn.typeId}\n        //     style={{\n        //       border: 'solid 1px #333',\n        //       outline: '0 none',\n        //       borderRadius: '5px',\n        //       boxShadow: '2px 2px 1px 1px rgba(0, 0, 0, 0.5)',\n        //       margin: '0 5px 5px 0',\n        //       backgroundColor:\n        //         btn.typeId === mapTypeId ? '#2780E3' : 'white',\n        //       color: btn.typeId === mapTypeId ? 'white' : 'black',\n        //     }}\n        //     onClick={() => {\n        //       setMapTypeId(btn.typeId)\n        //     }}\n        //   >\n        //     {btn.text}\n        //   </button>\n        // )\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NaverMap, {\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      defaultCenter: {\n        lat: LOCATION.y,\n        lng: LOCATION.x\n      },\n      defaultZoom: 17,\n      mapTypeId: mapTypeId,\n      children: /*#__PURE__*/_jsxDEV(Marker, {\n        position: {\n          lat: LOCATION.y,\n          lng: LOCATION.x\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 7\n  }, this);\n};\n_s(TypeNaverMap, \"FFxSoZ+O0UwF9ib0pTUVl4hvzMM=\", false, function () {\n  return [useNavermaps];\n});\n_c = TypeNaverMap;\nexport default TypeNaverMap;\nvar _c;\n$RefreshReg$(_c, \"TypeNaverMap\");","map":{"version":3,"names":["React","useState","Container","MapDiv","NaverMap","Marker","useNavermaps","jsxDEV","_jsxDEV","LOCATION","x","y","TypeNaverMap","_s","navermaps","mapTypeId","setMapTypeId","MapTypeId","NORMAL","buttons","typeId","text","TERRAIN","SATELLITE","HYBRID","Buttons","_ref","style","border","outline","borderRadius","boxShadow","margin","backgroundColor","color","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","position","width","height","top","left","zIndex","padding","map","btn","defaultCenter","lat","lng","defaultZoom","_c","$RefreshReg$"],"sources":["C:/Users/mhcho1/Desktop/react-Project/kakaomap-app/src/components/naver/TypeNaverMap.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Container as MapDiv, NaverMap, Marker, useNavermaps } from \"react-naver-maps\";\r\n\r\nconst LOCATION = {\r\n    x : 127.42585033518178,\r\n    y : 36.32787631122742\r\n};\r\n\r\n\r\n\r\nconst TypeNaverMap = () => {\r\n  // const {naver} = window;\r\n\r\n  const navermaps = useNavermaps();\r\n  const [mapTypeId, setMapTypeId] = useState(navermaps.MapTypeId.NORMAL);\r\n  const buttons = [\r\n    {\r\n      typeId: navermaps.MapTypeId.NORMAL,\r\n      text: '일반지도',\r\n    },\r\n    {\r\n      typeId: navermaps.MapTypeId.TERRAIN,\r\n      text: '지형도',\r\n    },\r\n    {\r\n      typeId: navermaps.MapTypeId.SATELLITE,\r\n      text: '위성지도',\r\n    },\r\n    {\r\n      typeId: navermaps.MapTypeId.HYBRID,\r\n      text: '겹쳐보기',\r\n    },\r\n  ];\r\n\r\n  const Buttons = ({typeId, text}) => {\r\n    return (\r\n      <button\r\n          key={typeId}\r\n          style={{\r\n            border: 'solid 1px #333',\r\n            outline: '0 none',\r\n            borderRadius: '5px',\r\n            boxShadow: '2px 2px 1px 1px rgba(0, 0, 0, 0.5)',\r\n            margin: '0 5px 5px 0',\r\n            backgroundColor:\r\n              typeId === mapTypeId ? '#2780E3' : 'white',\r\n            color: typeId === mapTypeId ? 'white' : 'black',\r\n          }}\r\n          onClick={() => {\r\n            setMapTypeId(typeId)\r\n          }}\r\n        >\r\n          {text}\r\n        </button>\r\n    )\r\n  }\r\n  \r\n    return (\r\n      <MapDiv style={{position: 'relative', width:'1000px', height:'500px'}}>\r\n        <div\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            zIndex: 1000,\r\n            padding: 5,\r\n          }}\r\n        >\r\n          {buttons.map((btn) => {\r\n            <Buttons key={btn.typeId} typeId={btn.typeId} text={btn.text} ></Buttons>\r\n            // return (\r\n            //   <button\r\n            //     key={btn.typeId}\r\n            //     style={{\r\n            //       border: 'solid 1px #333',\r\n            //       outline: '0 none',\r\n            //       borderRadius: '5px',\r\n            //       boxShadow: '2px 2px 1px 1px rgba(0, 0, 0, 0.5)',\r\n            //       margin: '0 5px 5px 0',\r\n            //       backgroundColor:\r\n            //         btn.typeId === mapTypeId ? '#2780E3' : 'white',\r\n            //       color: btn.typeId === mapTypeId ? 'white' : 'black',\r\n            //     }}\r\n            //     onClick={() => {\r\n            //       setMapTypeId(btn.typeId)\r\n            //     }}\r\n            //   >\r\n            //     {btn.text}\r\n            //   </button>\r\n            // )\r\n          })}\r\n        </div>\r\n        <NaverMap\r\n          style={{ width: '100%', height: '100%' }}\r\n          defaultCenter={{ lat: LOCATION.y, lng: LOCATION.x }}\r\n          defaultZoom={17}\r\n          mapTypeId={mapTypeId}\r\n        >\r\n        <Marker position={{ lat: LOCATION.y, lng: LOCATION.x }} />\r\n        </NaverMap>\r\n      </MapDiv>\r\n    )\r\n}\r\n\r\nexport default TypeNaverMap;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}