{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mhcho1\\\\Desktop\\\\react-Project\\\\kakaomap-app\\\\src\\\\components\\\\NaverMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NaverMap = () => {\n  _s();\n  useEffect(() => {\n    const {\n      naver\n    } = window;\n    const location = new naver.maps.LatLng(36.32787631122742, 127.42585033518178);\n    const options = {\n      center: location,\n      zoom: 16,\n      zoomControl: true,\n      zommControlOptions: {\n        position: naver.maps.Position.TOP_RIGHT\n      }\n    };\n    const map = new naver.maps.Map('naverMap', options);\n    new naver.maps.Marker({\n      position: location,\n      map: map\n    });\n    function btnSetting() {\n      var listEl = document.getElementById('btnList'),\n        btnItem = \"<input id='NORMAL' type='button' value='일반지도' />\" + \"<input id='TERRAIN' type='button' value='지형도' />\" + \"<input id='SATELLITE' type='button' value='위성지도' />\" + \"<input id='HYBRID' type='button' value='겹쳐보기' />\";\n      listEl.innerHTML = btnItem;\n      var el = document.getElementsByClassName('buttons > input');\n      el.onclick = () => {\n        var mapTypeId = this.id;\n        if (map.getMapTypeId() !== naver.maps.MapTypeId[mapTypeId]) {\n          map.setMapTypeId(naver.maps.MapTypeId[mapTypeId]); // 지도 유형 변경하기\n\n          // btns.removeClass(\"control-on\");\n          // $(this).addClass(\"control-on\");\n        }\n      };\n    }\n\n    const btnClick = e => {\n      e.preventDefault();\n      var mapTypeId = this.id;\n      if (map.getMapTypeId() !== naver.maps.MapTypeId[mapTypeId]) {\n        map.setMapTypeId(naver.maps.MapTypeId[mapTypeId]); // 지도 유형 변경하기\n\n        // btns.removeClass(\"control-on\");\n        // $(this).addClass(\"control-on\");\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"naverMap\",\n      style: {\n        width: '1000px',\n        height: '500px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(NaverMap, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = NaverMap;\nexport default NaverMap;\nvar _c;\n$RefreshReg$(_c, \"NaverMap\");","map":{"version":3,"names":["React","useEffect","jsxDEV","_jsxDEV","NaverMap","_s","naver","window","location","maps","LatLng","options","center","zoom","zoomControl","zommControlOptions","position","Position","TOP_RIGHT","map","Map","Marker","btnSetting","listEl","document","getElementById","btnItem","innerHTML","el","getElementsByClassName","onclick","mapTypeId","id","getMapTypeId","MapTypeId","setMapTypeId","btnClick","e","preventDefault","children","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mhcho1/Desktop/react-Project/kakaomap-app/src/components/NaverMap.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\n\r\n\r\n\r\nconst NaverMap = () => {\r\n\r\n    useEffect(() => {\r\n        const {naver} = window;\r\n\r\n        const location = new naver.maps.LatLng(36.32787631122742, 127.42585033518178);\r\n\r\n        const options = {\r\n            center : location,\r\n            zoom : 16,\r\n            zoomControl : true,\r\n            zommControlOptions: {position : naver.maps.Position.TOP_RIGHT}\r\n        };\r\n        const map = new naver.maps.Map('naverMap', options);\r\n\r\n        new naver.maps.Marker({\r\n            position: location,\r\n            map: map\r\n        });\r\n\r\n        function btnSetting() {\r\n            var listEl = document.getElementById('btnList'),\r\n            btnItem = \"<input id='NORMAL' type='button' value='일반지도' />\"\r\n                    + \"<input id='TERRAIN' type='button' value='지형도' />\"\r\n                    + \"<input id='SATELLITE' type='button' value='위성지도' />\"\r\n                    + \"<input id='HYBRID' type='button' value='겹쳐보기' />\";\r\n                    \r\n            listEl.innerHTML = btnItem;\r\n\r\n            var el = document.getElementsByClassName('buttons > input');\r\n            el.onclick = () => {\r\n                var mapTypeId = this.id;\r\n        \r\n                if (map.getMapTypeId() !== naver.maps.MapTypeId[mapTypeId]) {\r\n                    map.setMapTypeId(naver.maps.MapTypeId[mapTypeId]); // 지도 유형 변경하기\r\n            \r\n                    // btns.removeClass(\"control-on\");\r\n                    // $(this).addClass(\"control-on\");\r\n                }\r\n            }\r\n        }\r\n\r\n        const btnClick = (e) => {\r\n            e.preventDefault();\r\n    \r\n            var mapTypeId = this.id;\r\n        \r\n            if (map.getMapTypeId() !== naver.maps.MapTypeId[mapTypeId]) {\r\n                map.setMapTypeId(naver.maps.MapTypeId[mapTypeId]); // 지도 유형 변경하기\r\n        \r\n                // btns.removeClass(\"control-on\");\r\n                // $(this).addClass(\"control-on\");\r\n            }\r\n        };\r\n\r\n    }, []);\r\n\r\n    \r\n\r\n\r\n    return (\r\n        <div>\r\n            {/* <div id=\"btnList\" className=\"buttons\"></div> */}\r\n            <div id=\"naverMap\" style={{width:'1000px', height:'500px'}}></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NaverMap;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIzC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEnBJ,SAAS,CAAC,MAAM;IACZ,MAAM;MAACK;IAAK,CAAC,GAAGC,MAAM;IAEtB,MAAMC,QAAQ,GAAG,IAAIF,KAAK,CAACG,IAAI,CAACC,MAAM,CAAC,iBAAiB,EAAE,kBAAkB,CAAC;IAE7E,MAAMC,OAAO,GAAG;MACZC,MAAM,EAAGJ,QAAQ;MACjBK,IAAI,EAAG,EAAE;MACTC,WAAW,EAAG,IAAI;MAClBC,kBAAkB,EAAE;QAACC,QAAQ,EAAGV,KAAK,CAACG,IAAI,CAACQ,QAAQ,CAACC;MAAS;IACjE,CAAC;IACD,MAAMC,GAAG,GAAG,IAAIb,KAAK,CAACG,IAAI,CAACW,GAAG,CAAC,UAAU,EAAET,OAAO,CAAC;IAEnD,IAAIL,KAAK,CAACG,IAAI,CAACY,MAAM,CAAC;MAClBL,QAAQ,EAAER,QAAQ;MAClBW,GAAG,EAAEA;IACT,CAAC,CAAC;IAEF,SAASG,UAAUA,CAAA,EAAG;MAClB,IAAIC,MAAM,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;QAC/CC,OAAO,GAAG,kDAAkD,GAClD,kDAAkD,GAClD,qDAAqD,GACrD,kDAAkD;MAE5DH,MAAM,CAACI,SAAS,GAAGD,OAAO;MAE1B,IAAIE,EAAE,GAAGJ,QAAQ,CAACK,sBAAsB,CAAC,iBAAiB,CAAC;MAC3DD,EAAE,CAACE,OAAO,GAAG,MAAM;QACf,IAAIC,SAAS,GAAG,IAAI,CAACC,EAAE;QAEvB,IAAIb,GAAG,CAACc,YAAY,EAAE,KAAK3B,KAAK,CAACG,IAAI,CAACyB,SAAS,CAACH,SAAS,CAAC,EAAE;UACxDZ,GAAG,CAACgB,YAAY,CAAC7B,KAAK,CAACG,IAAI,CAACyB,SAAS,CAACH,SAAS,CAAC,CAAC,CAAC,CAAC;;UAEnD;UACA;QACJ;MACJ,CAAC;IACL;;IAEA,MAAMK,QAAQ,GAAIC,CAAC,IAAK;MACpBA,CAAC,CAACC,cAAc,EAAE;MAElB,IAAIP,SAAS,GAAG,IAAI,CAACC,EAAE;MAEvB,IAAIb,GAAG,CAACc,YAAY,EAAE,KAAK3B,KAAK,CAACG,IAAI,CAACyB,SAAS,CAACH,SAAS,CAAC,EAAE;QACxDZ,GAAG,CAACgB,YAAY,CAAC7B,KAAK,CAACG,IAAI,CAACyB,SAAS,CAACH,SAAS,CAAC,CAAC,CAAC,CAAC;;QAEnD;QACA;MACJ;IACJ,CAAC;EAEL,CAAC,EAAE,EAAE,CAAC;EAKN,oBACI5B,OAAA;IAAAoC,QAAA,eAEIpC,OAAA;MAAK6B,EAAE,EAAC,UAAU;MAACQ,KAAK,EAAE;QAACC,KAAK,EAAC,QAAQ;QAAEC,MAAM,EAAC;MAAO;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAO;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAChE;AAEd,CAAC;AAAAzC,EAAA,CAlEKD,QAAQ;AAAA2C,EAAA,GAAR3C,QAAQ;AAoEd,eAAeA,QAAQ;AAAC,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}